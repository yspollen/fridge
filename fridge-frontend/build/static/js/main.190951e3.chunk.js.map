{"version":3,"sources":["components/authService.js","components/withAuth.js","components/home.js","components/register.js","components/item.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","domain","Object","classCallCheck","this","fetch","bind","login","getProfile","username","password","_this","concat","method","body","JSON","stringify","then","res","console","log","token","setToken","Promise","resolve","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","Content-Type","loggedIn","objectSpread","_checkStatus","response","json","status","error","Error","statusText","withAuth","AuthComponent","Auth","_Component","AuthWrapped","possibleConstructorReturn","getPrototypeOf","call","state","user","inherits","createClass","key","value","profile","setState","logout","props","history","replace","react_default","a","createElement","Component","auth","Home","handleSubmitAdd","event","preventDefault","axios","post","item_name","calorie_count","calories","expiry_date","quantity","owner","data","handleSubmitRemove","handleChange","defineProperty","target","id","length","toString","_this2","get","_this3","requestedItemName","find","element","substr","_this4","updateItems","index_esm","split","minSize","defaultSize","style","h4Style","map","item","href","onClick","autoFill","listStyle","formStyle","onSubmit","FormGroup","controlId","bssize","FormLabel","FormControl","autoFocus","type","placeholder","onChange","min","Button","block","name","disabled","validate","handleLogout","background","color","textAlign","padding","bottomMargin","Register","className","handleSubmit","email","redirect","confirm","react_router","to","react_router_dom","Login","passwd","catch","alert","assertThisInitialized","handleFormSubmit","Form","App","classStyle","headerStyle","path","component","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.190951e3.chunk.js","sourcesContent":["import decode from 'jwt-decode';\nexport default class AuthService {\n    // Initializing important variables\n    constructor(domain) {\n        this.domain = domain || 'http://localhost:4000' // API server domain\n        this.fetch = this.fetch.bind(this) // React binding stuff\n        this.login = this.login.bind(this)\n        this.getProfile = this.getProfile.bind(this)\n    }\n\n    login(username, password) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}/login`, {\n            method: 'POST',\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n            //console.log(username);\n            //console.log(password);\n        }).then(res => {\n            console.log(res.token);\n            this.setToken(res.token) // Setting the token in localStorage\n            return Promise.resolve(res);\n        })\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // GEtting token from localstorage\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getProfile() {\n        // Using jwt-decode npm package to decode the token\n        return decode(this.getToken());\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}","import React, { Component } from 'react';\nimport AuthService from './authService';\nimport { Redirect } from \"react-router-dom\";\n\n\nexport default function withAuth(AuthComponent) {\n    // Code here now\n    const Auth = new AuthService('http://localhost:4000');\n    return class AuthWrapped extends Component {\n\t    constructor() {\n\t\t    super();\n\t\t    this.state = {\n\t\t        user: null\n\t\t    }\n\t\t}\n\n\t\tcomponentWillMount() {\n\t\t    if (!Auth.loggedIn()) {\n\t\t        this.props.history.replace('/login')\n\t\t        //return <Redirect to='/login'/>;\n\t\t    }\n\t\t    else {\n\t\t        try {\n\t\t            const profile = Auth.getProfile()\n\t\t            this.setState({\n\t\t                user: profile\n\t\t            })\n\t\t    \t}\n\t\t        catch(err){\n\t\t            Auth.logout()\n\t\t            this.props.history.replace('/login')\n\t\t        }\n    \t\t}\n\t\t}\n\n\t\trender() {\n    if (this.state.user) {\n        return (\n            <AuthComponent history={this.props.history} user={this.state.user} />\n        )\n    }\n    else {\n        return null\n    }\n\n    }\n}\n}","import React, { Component } from 'react';\nimport SplitPane from 'react-split-pane';\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport axios from 'axios';\nimport withAuth from './withAuth';\nimport auth from './authService';\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst Auth = new auth();\n\nclass Home extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t      item_name: '',\n\t      calories: '',\n\t      quantity: '',\n\t      expiry_date: '',\n\t      owner: '',\n\t      data: []\n\t    };\n  \t}\n\n\tvalidate() {\n\t\treturn this.state.item_name.length > 0 && this.state.quantity.toString().length > 0 && this.state.calories.toString().length > 0 && this.state.expiry_date.toString().length > 0 && this.state.owner.length > 0;\n\t}\n\n\n\thandleLogout(){\n    Auth.logout()\n    this.props.history.replace('/login');\n  }\n\n\thandleSubmitAdd = (event) => {\n\t    event.preventDefault();\n\t    axios.post('http://localhost:4000/items/add', {\n\t      item_name: this.state.item_name,\n\t      calorie_count: this.state.calories,\n\t      expiry_date: this.state.expiry_date,\n\t      quantity: this.state.quantity,\n\t      owner: this.state.owner\n\t    })\n\t    .then(res => console.log(res.data));\n\n\t    this.setState({\n\t        item_name: '',\n\t      \tcalories: '',\n\t      \tquantity: '',\n\t      \texpiry_date: '',\n\t      \towner: ''\n\t    });\n\t}\n\n\thandleSubmitRemove = (event) => {\n\t    event.preventDefault();\n\t    axios.post('http://localhost:4000/items/remove', {\n\t      item_name: this.state.item_name,\n\t      calorie_count: this.state.calories,\n\t      expiry_date: this.state.expiry_date,\n\t      quantity: this.state.quantity,\n\t      owner: this.state.owner\n\t    })\n\t    .then(res => console.log(res.data));\n\n\t    this.setState({\n\t        item_name: '',\n\t      \tcalories: '',\n\t      \tquantity: '',\n\t      \texpiry_date: '',\n\t      \towner: ''\n\t    });\n\t}\n\n\thandleChange = (event) => {\n\t    this.setState({\n\t      [event.target.id]: event.target.value\n\t    });\n\t}\n\n\tupdateItems(){\n\t\taxios.get('http://localhost:4000/items')\n\t\t.then(res => {\n\t\t\tconst data = res.data;\n\t\t\tthis.setState({\n\t\t\t\tdata: data\n\t\t\t})\n\t\t})\n\t}\n\n\tautoFill(item_name) {\n\t\taxios.get('http://localhost:4000/items')\n\t\t.then(res => {\n\t\t\tvar requestedItemName = item_name;\n\t\t\tvar data = res.data.find(function(element) {\n  \t\t\t\treturn element.item_name === requestedItemName;\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\titem_name: data.item_name,\n\t      \t\tcalories: data.calorie_count,\n\t      \t\tquantity: data.quantity,\n\t      \t\texpiry_date: data.expiry_date.substr(0,10),\n\t      \t\towner: data.owner\n\t\t\t})\n\t\t})\n   \t};\n\n  \trender() {\n  \t\tthis.updateItems();\n    \treturn (\n\t    \t<div>\n\t        \t<SplitPane split=\"vertical\" minSize={50} defaultSize={650}>\n\t        \t    <div>\n\t        \t    \t<h4 style={h4Style}>Items</h4>\n\t        \t    \t<ul>{\n\t        \t    \t\tthis.state.data.map((item, key) => {\n                       \t\t\treturn (\n                       \t\t\t\t<a href=\"#\" onClick={this.autoFill.bind(this, item.item_name)} style={listStyle} key={key}>{item.id}\n                       \t\t\t\t\t{item.quantity}&nbsp;\n                       \t\t\t\t\t{item.item_name}&nbsp;\n                       \t\t\t\t\t({item.calorie_count.toString()} calories):&nbsp;\n                       \t\t\t\t\texpires on {item.expiry_date ? item.expiry_date.toString().substr(5,2) + \"/\" + item.expiry_date.toString().substr(8,2) + \"/\" + item.expiry_date.toString().substr(0,4): \"mm/dd/yyyy\"}&nbsp;\n                       \t\t\t\t\t---&nbsp;{item.owner}\n                       \t\t\t\t\t<p></p>\n                       \t\t\t\t</a>\n                       \t\t\t)\n                    \t\t})\n\t        \t    \t}</ul>\n\t        \t    </div>\n     \t\t\t\t<div>\n     \t\t\t\t\t<h4 style={h4Style}>Add/Update/Remove Item</h4>\n     \t\t\t\t\t<form style={formStyle} onSubmit={this.handleSubmitAdd.bind(this)}>\n\t\t\t\t          \t<FormGroup controlId=\"item_name\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Item Name*</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t            \t\tautoFocus\n\t\t\t\t\t\t            type=\"string\"\n\t\t\t\t\t\t            placeholder=\"item name\"\n\t\t\t\t\t\t            onChange={this.handleChange}\n\t\t\t\t\t\t            value={this.state.item_name}\n\t\t\t\t            \t/>\n\t\t\t\t          \t</FormGroup>\n\t\t\t\t          \t<FormGroup controlId=\"quantity\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Quantity</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t\t            \ttype=\"number\"\n\t\t\t\t\t              \tplaceholder=\"quantity\"\n\t\t\t\t\t              \tonChange={this.handleChange}\n\t\t\t\t\t              \tvalue={this.state.quantity}\n\t\t\t\t\t              \tmin='0'\n\t\t\t\t            \t/>\n\t\t\t\t          \t</FormGroup>\n\t\t\t\t          \t<FormGroup controlId=\"calories\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Calorie Count</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t            \ttype=\"number\"\n\t\t\t\t\t          \t\tplaceholder=\"calorie count\"\n\t\t\t\t\t            \tonChange={this.handleChange}\n\t\t\t\t\t            \tvalue={this.state.calories}\n\t\t\t\t\t         \t\tmin='0'\n\t\t\t\t            \t/>\n\t\t\t\t          \t</FormGroup>\n\t\t\t\t        \t<FormGroup controlId=\"expiry_date\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Expiry Date</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t\t            \ttype=\"date\"\n\t\t\t\t\t            \tonChange={this.handleChange}\n\t\t\t\t\t            \tvalue={this.state.expiry_date}\n\t\t\t\t            \t/>\n\t\t\t\t        \t</FormGroup>\n\t\t\t\t        \t<FormGroup controlId=\"owner\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Owner*</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t            \t\tplaceholder=\"owner\"\n\t\t\t\t            \t\ttype=\"string\"\n\t\t\t\t            \t\tonChange={this.handleChange}\n\t\t\t\t            \t\tvalue={this.state.owner}\n\t\t\t\t            \t/>\n\t\t\t\t         \t</FormGroup>\n\t\t\t\t          \t<Button block name=\"additem\" type=\"submit\" bssize=\"large\" disabled={!this.validate()}>\n\t\t\t\t            \tAdd/Update Item\n\t\t\t\t          \t</Button>\n\t\t\t\t          \t<Button block name=\"removeitem\" type=\"submit\" bssize=\"large\" disabled={!this.validate()} onClick={this.handleSubmitRemove.bind(this)}>\n\t\t\t\t            \tRemove Item\n\t\t\t\t          \t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button block name=\"logout\" type=\"submit\" bssize=\"large\" onClick={this.handleLogout.bind(this)}>\n\t\t\t\t            \tLog Out\n\t\t\t\t          \t</Button>\n\t\t\t\t        </form>\n     \t\t\t\t</div>\n \t\t\t\t</SplitPane>\n\t    \t</div>\n    \t);\n    }\n    }\n\n\nconst h4Style = {\n  background: '#007df7',\n  color: '#ffffff',\n  textAlign: 'center',\n  padding: '0px',\n  bottomMargin: '10px'\n}\n\nconst listStyle = {\n  textAlign: 'left'\n}\n\nconst formStyle = {\n\n}\n\nexport default withAuth(Home);\n","import React, { Component } from 'react';\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from \"react-router-dom\";\nimport \"./styling/register.css\";\nimport axios from 'axios';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirm: \"\",\n      redirect: false\n    };\n  }\n\n  validate() {\n    return this.state.password.length > 0 && this.state.email.length > 0 && this.state.password === this.state.confirm;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios.post('http://localhost:4000/register', {\n      username: this.state.email,\n      password: this.state.password\n    })\n    .then(() => this.setState({ redirect: true }));\n\n    this.setState({\n        email: '',\n        password: '',\n        confirm: ''\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\nrender() {\n  const { redirect } = this.state;\n  if (redirect){\n    return <Redirect to='/login'/>;\n  }\n  else {\n    return (\n      <div className=\"register\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\" bssize=\"large\">\n            <FormLabel>Email address</FormLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bssize=\"large\">\n            <FormLabel>Create Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm\" bssize=\"large\">\n            <FormLabel>Confirm Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.confirm}\n            />\n          </FormGroup>\n          <Button block type=\"submit\" bssize=\"large\" disabled={!this.validate()}>\n            Register\n          </Button>\n          <Link to=\"/login\">Already have an account? Login here.</Link>\n        </form>\n      </div>\n    );\n  }\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport withAuth from './withAuth';\nclass Item extends Component {\n  render() {\n    return (\n      <div className=\"Item\">\n        Item\n        <p>This is the item (user)</p>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Item);\n","import React, { Component } from 'react';\nimport { Form, Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport \"./styling/login.css\";\nimport AuthService from './authService';\nimport axios from 'axios';\nimport withAuth from './withAuth';\n\nconst Auth = new AuthService();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      passwd: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleSubmit.bind(this);\n    this.Auth = new AuthService();\n  }\n\n  validate() {\n    return this.state.email.length > 0 && this.state.passwd.length > 0;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    //console.log(this.state.email);\n   // console.log(this.state.passwd);\n    this.Auth.login(this.state.email,this.state.passwd)\n            .then(res =>{\n              console.log(\"Yee baby\");\n               this.props.history.replace('/item');\n            })\n            .catch(err =>{\n                alert(err);\n            })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"login\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\">\n            <FormLabel>Email address</FormLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n              />\n          </FormGroup>\n          <FormGroup controlId=\"passwd\">\n            <FormLabel>Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.passwd}\n              />\n          </FormGroup>\n          <Button block type=\"submit\" disabled={!this.validate()}>\n            Login\n          </Button>\n          <Link to=\"/register\">Don't have an account? Register here.</Link>\n        </Form>\n      </div>\n    );\n  }\n\n\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Item from \"./components/item\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\nimport AuthService from './components/authService';\nimport withAuth from './components/withAuth';\nconst Auth = new AuthService();\n\nclass App extends Component {\n\n  handleLogout(){\n    Auth.logout()\n    this.props.history.replace('/login');\n  }\n\n  render() {\n    return (\n      <Router>\n        <div style={classStyle} className=\"App\">\n          <h1 style={headerStyle}>\n            Fridge\n          </h1>\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/item\" component={Home} />\n              <Route path=\"*\" component={Login} />\n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst headerStyle = {\n  background: '#007df7',\n  color: '#ffffff',\n  textAlign: 'center',\n  padding: '5px',\n  bottomMargin: '5px'\n}\n\nconst classStyle = {\n  fontFamily: \"Helvetica\",\n  color: '#007df7'\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}