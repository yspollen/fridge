{"ast":null,"code":"import _classCallCheck from \"/Users/murugan/fridge/fridge-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/murugan/fridge/fridge-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/murugan/fridge/fridge-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/murugan/fridge/fridge-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/murugan/fridge/fridge-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/murugan/fridge/fridge-frontend/src/components/withAuth.js\";\nimport React, { Component } from 'react';\nimport AuthService from './authService';\nexport default function withAuth(AuthComponent) {\n  // Code here now\n  var Auth = new AuthService('http://localhost:4000');\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(AuthWrapped, _Component);\n\n      function AuthWrapped() {\n        var _this;\n\n        _classCallCheck(this, AuthWrapped);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthWrapped).call(this));\n        _this.state = {\n          user: null\n        };\n        return _this;\n      }\n\n      _createClass(AuthWrapped, [{\n        key: \"componentWillMount\",\n        value: function componentWillMount() {\n          if (!Auth.loggedIn()) {\n            this.props.history.replace('/login'); //return <Redirect to='/login'/>;\n          } else {\n            try {\n              var profile = Auth.getProfile();\n              this.setState({\n                user: profile\n              });\n            } catch (err) {\n              Auth.logout();\n              this.props.history.replace('/login');\n            }\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.user) {\n            return React.createElement(AuthComponent, {\n              history: this.props.history,\n              user: this.state.user,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            });\n          } else {\n            return null;\n          }\n        }\n      }]);\n\n      return AuthWrapped;\n    }(Component)\n  );\n}","map":{"version":3,"sources":["/Users/murugan/fridge/fridge-frontend/src/components/withAuth.js"],"names":["React","Component","AuthService","withAuth","AuthComponent","Auth","state","user","loggedIn","props","history","replace","profile","getProfile","setState","err","logout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAC5C;AACA,MAAMC,IAAI,GAAG,IAAIH,WAAJ,CAAgB,uBAAhB,CAAb;AACA;AAAA;AAAA;AAAA;;AACC,6BAAc;AAAA;;AAAA;;AACb;AACA,cAAKI,KAAL,GAAa;AACTC,UAAAA,IAAI,EAAE;AADG,SAAb;AAFa;AAKhB;;AANC;AAAA;AAAA,6CAQmB;AACjB,cAAI,CAACF,IAAI,CAACG,QAAL,EAAL,EAAsB;AAClB,iBAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B,EADkB,CAElB;AACH,WAHD,MAIK;AACD,gBAAI;AACA,kBAAMC,OAAO,GAAGP,IAAI,CAACQ,UAAL,EAAhB;AACA,mBAAKC,QAAL,CAAc;AACVP,gBAAAA,IAAI,EAAEK;AADI,eAAd;AAGN,aALE,CAMA,OAAMG,GAAN,EAAU;AACNV,cAAAA,IAAI,CAACW,MAAL;AACA,mBAAKP,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH;AACJ;AACJ;AAzBC;AAAA;AAAA,iCA2BO;AACP,cAAI,KAAKL,KAAL,CAAWC,IAAf,EAAqB;AACjB,mBACI,oBAAC,aAAD;AAAe,cAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,OAAnC;AAA4C,cAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,WAJD,MAKK;AACD,mBAAO,IAAP;AACH;AAEA;AArCD;;AAAA;AAAA,MAAiCN,SAAjC;AAAA;AAuCH","sourcesContent":["import React, { Component } from 'react';\nimport AuthService from './authService';\n\n\nexport default function withAuth(AuthComponent) {\n    // Code here now\n    const Auth = new AuthService('http://localhost:4000');\n    return class AuthWrapped extends Component {\n\t    constructor() {\n\t\t    super();\n\t\t    this.state = {\n\t\t        user: null\n\t\t    }\n\t\t}\n\n\t\tcomponentWillMount() {\n\t\t    if (!Auth.loggedIn()) {\n\t\t        this.props.history.replace('/login')\n\t\t        //return <Redirect to='/login'/>;\n\t\t    }\n\t\t    else {\n\t\t        try {\n\t\t            const profile = Auth.getProfile()\n\t\t            this.setState({\n\t\t                user: profile\n\t\t            })\n\t\t    \t}\n\t\t        catch(err){\n\t\t            Auth.logout()\n\t\t            this.props.history.replace('/login')\n\t\t        }\n    \t\t}\n\t\t}\n\n\t\trender() {\n    if (this.state.user) {\n        return (\n            <AuthComponent history={this.props.history} user={this.state.user} />\n        )\n    }\n    else {\n        return null\n    }\n\n    }\n}\n}\n"]},"metadata":{},"sourceType":"module"}